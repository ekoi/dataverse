<ui:composition
    xmlns:h="http://java.sun.com/jsf/html"
    xmlns:f="http://java.sun.com/jsf/core"
    xmlns:ui="http://java.sun.com/jsf/facelets"
    xmlns:c="http://java.sun.com/jsp/jstl/core"
    xmlns:p="http://primefaces.org/ui"
    xmlns:pt="http://java.sun.com/jsf/passthrough"
    xmlns:jsf="http://xmlns.jcp.org/jsf">

    <ui:remove>
    <!-- input text start UPDATE: UI:REMOVE applied due to duplicate ID errors, left code as reference incase test scripts complain -->
    <span id="pre-input-#{dsf.datasetFieldType.name}" class="pre-input-tag"/></ui:remove>
    <c:set var="displayCV" value="#{cvMgr.size() > 0 and (dsfv.datasetField.datasetFieldType.name ==cvMgr.get(dsfv.datasetField.datasetFieldType.parentDatasetFieldType.name).getKeys()[0]
                    or dsfv.datasetField.datasetFieldType.name==cvMgr.get(dsfv.datasetField.datasetFieldType.parentDatasetFieldType.name).getKeys()[1]
                    or dsfv.datasetField.datasetFieldType.name==cvMgr.get(dsfv.datasetField.datasetFieldType.parentDatasetFieldType.name).getKeys()[2])}"/>
    <p:inputText value="#{dsfv.valueForEdit}" id="inputText" pt:aria-required="#{dsf.required}"
                 styleClass="form-control #{dsfv.datasetField.datasetFieldType.name == 'title' and DatasetPage.editMode == 'CREATE'  ? 'datasetfield-title' : ''}"
                 rendered="#{!dsfv.datasetField.datasetFieldType.controlledVocabulary and !displayCV
                             and (dsfv.datasetField.datasetFieldType.fieldType == 'TEXT'
                             or dsfv.datasetField.datasetFieldType.fieldType == 'INT'
                             or dsfv.datasetField.datasetFieldType.fieldType == 'FLOAT'
                             or dsfv.datasetField.datasetFieldType.fieldType == 'URL'
                             or dsfv.datasetField.datasetFieldType.fieldType == 'DATE'
                             or dsfv.datasetField.datasetFieldType.fieldType == 'EMAIL')}"/>
    <p:watermark for="inputText" value="#{dsfv.datasetField.datasetFieldType.localeWatermark}"></p:watermark>
    <ui:fragment rendered="#{displayCV and dsfv.datasetField.datasetFieldType.name==cvMgr.get(dsfv.datasetField.datasetFieldType.parentDatasetFieldType.name).getKeys()[0]}">
        <div id="akmi_#{valCount.index+1}_#{cvMgr.get(dsfv.datasetField.datasetFieldType.parentDatasetFieldType.name).getKeys()[0]}">
            <p:autoComplete id="cv_vocabs_#{valCount.index+1}_k" value="#{dsfv.valueForEdit}"
                            completeMethod="#{cvMgr.get(dsfv.datasetField.datasetFieldType.parentDatasetFieldType.name).getVocabs()}"
                            style="width:95%;"
                            readonly="#{facesContext.renderResponse and cvMgr.get(dsfv.datasetField.datasetFieldType.parentDatasetFieldType.name).getVocabs().size() == 1
                            and cvMgr.get(dsfv.datasetField.datasetFieldType.parentDatasetFieldType.name).isReadonly()}"/>

        </div>
    </ui:fragment>
    <ui:fragment rendered="#{displayCV and dsfv.datasetField.datasetFieldType.name==cvMgr.get(dsfv.datasetField.datasetFieldType.parentDatasetFieldType.name).getKeys()[1]}">
        <div id="akmi_#{valCount.index+1}_#{cvMgr.get(dsfv.datasetField.datasetFieldType.parentDatasetFieldType.name).getKeys()[1]}">
            <p:inputText value="#{dsfv.valueForEdit}" id="cv_term_#{valCount.index+1}" tabindex="#{block.index+1}"
                         styleClass="form-control #{dsfv.datasetField.datasetFieldType.name == 'title' and DatasetPage.editMode == 'CREATE'  ? 'datasetfield-title' : ''}"/>
        </div>
    </ui:fragment>
    <ui:fragment rendered="#{displayCV and dsfv.datasetField.datasetFieldType.name==cvMgr.get(dsfv.datasetField.datasetFieldType.parentDatasetFieldType.name).getKeys()[2] }">
        <div id="akmi_#{valCount.index+1}_#{cvMgr.get(dsfv.datasetField.datasetFieldType.parentDatasetFieldType.name).getKeys()[2]}">
            <p:inputText value="#{dsfv.valueForEdit}" id="cv_url_#{valCount.index+1}" tabindex="#{block.index+1}"
                         styleClass="form-control #{dsfv.datasetField.datasetFieldType.name == 'title' and DatasetPage.editMode == 'CREATE'  ? 'datasetfield-title' : ''}"/>
        </div>
        <script>
                $(document).ready(function() {
                    var jsonResult = {};
                    var cvmUrl = "#{cvMgr.get(dsfv.datasetField.datasetFieldType.parentDatasetFieldType.name).getCvmUrl()}";
                    var cvmLang = "#{cvMgr.get(dsfv.datasetField.datasetFieldType.parentDatasetFieldType.name).getLanguage()}";
                    var cvmProtocol = "#{cvMgr.get(dsfv.datasetField.datasetFieldType.parentDatasetFieldType.name).getProtocol()}";
                    var cvmReqUrl = cvmUrl + "?protocol=" + cvmProtocol + "&amp;lang=" + cvmLang;
                    var vocabsize = "#{cvMgr.get(dsfv.datasetField.datasetFieldType.parentDatasetFieldType.name).getVocabs().size()}";
                    var readonly = "#{cvMgr.get(dsfv.datasetField.datasetFieldType.parentDatasetFieldType.name).isReadonly()}";
                    if (vocabsize == 1 &amp;&amp; readonly)
                        $("#akmi_#{valCount.index+1}_#{cvMgr.get(dsfv.datasetField.datasetFieldType.parentDatasetFieldType.name).getKeys()[0]}").find("input[name*='cv_vocabs_'").css('background-color' , '#EEEEEE');

                    var selectedVocab = "";
                    var vocabFieldValue = $("#akmi_#{valCount.index+1}_#{cvMgr.get(dsfv.datasetField.datasetFieldType.parentDatasetFieldType.name).getKeys()[0]}").find("input[name*='cv_vocabs_'").val();
                    if (vocabFieldValue =='' &amp;&amp; vocabsize == 1) {
                            selectedVocab = "#{cvMgr.get(dsfv.datasetField.datasetFieldType.parentDatasetFieldType.name).getVocabs()[0]}";
                            $("#akmi_#{valCount.index+1}_#{cvMgr.get(dsfv.datasetField.datasetFieldType.parentDatasetFieldType.name).getKeys()[0]}").find("input[name*='cv_vocabs_'").val(selectedVocab);
                    }
                    $("#akmi_#{valCount.index+1}_#{cvMgr.get(dsfv.datasetField.datasetFieldType.parentDatasetFieldType.name).getKeys()[0]}").find("input[name*='cv_vocabs_'").on("focusout", function(){
                          selectedVocab = $(this).val();
                        });

                   $("#akmi_#{valCount.index+1}_#{cvMgr.get(dsfv.datasetField.datasetFieldType.parentDatasetFieldType.name).getKeys()[1]}").find("input[name*='cv_term_']").autocomplete({
                        source: function(request, response) {
                            $.ajax({
                                url: cvmReqUrl + '&amp;vocab=' + selectedVocab,
                                dataType: "json",
                                data: { query: request.term},
                                success: function(data) {
                                    var results = data.results;
                                    var queries = [];
                                    var array = [];
                                    $.each(results, function(i, item) {
                                            queries.push(item.prefLabel);
                                        array.push({
                                            query: item.prefLabel,
                                            url: item.uri
                                        });
                                     });
                                    jsonResult = $.parseJSON(JSON.stringify(array));
                                    response(queries.sort());
                                }
                            });
                        },
                        minLength: 2,
                        select: function(event, ui) {
                            $.each(jsonResult, function(i, v) {
                                 if (v.query.search(new RegExp(ui.item.value)) != -1) {
                                     $("#akmi_#{valCount.index+1}_#{cvMgr.get(dsfv.datasetField.datasetFieldType.parentDatasetFieldType.name).getKeys()[2]}").find("input[name*='cv_url_']").val(v.url);
                                    return;
                                }
                            });
                         }
                    });
                 });
            </script>
        <style type="text/css">
            ul.ui-autocomplete {
                list-style: none;
                list-style-type: none;
                padding: 0px;
                margin: 0px;
            }
        </style>
    </ui:fragment>
    <p:inputTextarea value="#{dsfv.valueForEdit}" id="description" pt:aria-required="#{dsf.required}"
                     rows="5" cols="60" styleClass="form-control"
                     rendered="#{dsfv.datasetField.datasetFieldType.fieldType == 'TEXTBOX'}"/>
    <p:watermark for="description" value="#{dsfv.datasetField.datasetFieldType.localeWatermark}"></p:watermark>
    
    <div class="ui-message ui-message-error ui-widget ui-corner-all" aria-live="polite" jsf:rendered="#{dsfvIndex eq 0 and !empty dsfv.datasetField.validationMessage}">
        <span class="ui-message-error-detail">#{dsfv.datasetField.validationMessage}</span>
    </div>

    <div class="ui-message ui-message-error ui-widget ui-corner-all" aria-live="polite" jsf:rendered="#{!empty dsfv.validationMessage}">
        <span class="ui-message-error-detail">#{dsfv.validationMessage}</span>
    </div>

    <!-- This button / script is for replication data for the title field and is client side only -->
    <ui:fragment rendered="#{dsfv.datasetField.datasetFieldType.name == 'title' and DatasetPage.editMode == 'CREATE' }">
        <input type="button" id="replicationDataButton"
               class="btn btn-default" value="#{bundle['dataset.AddReplication']}"
               onclick="replicationFor();return false;"/>
        <script>
            //<![CDATA[
            function replicationFor() {
                $(".datasetfield-title")[0].value = "#{bundle['dataset.replicationDataFor']} " + $(".datasetfield-title")[0].value;
                $('#replicationDataButton').prop('disabled', true);
            }
            //]]>
        </script>
    </ui:fragment>
</ui:composition>